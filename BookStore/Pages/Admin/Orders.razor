@page "/admin/orders"
@inherits OwningComponentBase<ICheckoutRepository>


<OrderTable TableTitle="Not shipped" Checkouts="NotShippedOrders" ButtonLabel="Shipped" OrderSelected="CollectOrder"></OrderTable>

<OrderTable TableTitle="Shipped" Checkouts="ShippedOrders" ButtonLabel="Reset" OrderSelected="ResetOrder"></OrderTable>

<button class="btn btn-info" @onclick="@(x => UpdateData())">Refresh Data</button>

@code {

    public ICheckoutRepository repo => Service;

    public IEnumerable<Checkout> AllOrders { get; set; }
    public IEnumerable<Checkout> NotShippedOrders { get; set; }
    public IEnumerable<Checkout> ShippedOrders { get; set; }
    
    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }


    public async Task UpdateData()
    {
        AllOrders = await repo.Checkouts.ToListAsync();
        NotShippedOrders = AllOrders.Where(x => !x.OrderShipped);
        ShippedOrders = AllOrders.Where(x => x.OrderShipped);
    }

    public void CollectOrder(int id) => UpdateOrder(id, true);
    public void ResetOrder(int id) => UpdateOrder(id, false);

    private void UpdateOrder(int id, bool shipped)
    {
        Checkout c = repo.Checkouts.FirstOrDefault(x => x.CheckoutId == id);
        c.OrderShipped = shipped;
        repo.saveCheckout(c);
    }
}